Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.



class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
          initial= -1
          last= -1
          for i in range(len(nums)):
               if nums[i]==target:
                    initial=i
                    break
          for i in reversed(range(len(nums))):
              if nums[i]==target:
                    last=i
                    break
          return [initial,last]
